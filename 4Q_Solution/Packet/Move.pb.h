// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Move.proto
// Protobuf C++ Version: 5.29.2

#ifndef Move_2eproto_2epb_2eh
#define Move_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Move_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Move_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Move_2eproto;
namespace MoveMsg {
class Jump;
struct JumpDefaultTypeInternal;
extern JumpDefaultTypeInternal _Jump_default_instance_;
class Move;
struct MoveDefaultTypeInternal;
extern MoveDefaultTypeInternal _Move_default_instance_;
class MoveSync;
struct MoveSyncDefaultTypeInternal;
extern MoveSyncDefaultTypeInternal _MoveSync_default_instance_;
class StateChange;
struct StateChangeDefaultTypeInternal;
extern StateChangeDefaultTypeInternal _StateChange_default_instance_;
}  // namespace MoveMsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace MoveMsg {

// ===================================================================


// -------------------------------------------------------------------

class StateChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MoveMsg.StateChange) */ {
 public:
  inline StateChange() : StateChange(nullptr) {}
  ~StateChange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StateChange* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StateChange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateChange(const StateChange& from) : StateChange(nullptr, from) {}
  inline StateChange(StateChange&& from) noexcept
      : StateChange(nullptr, std::move(from)) {}
  inline StateChange& operator=(const StateChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateChange& operator=(StateChange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateChange* internal_default_instance() {
    return reinterpret_cast<const StateChange*>(
        &_StateChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StateChange& a, StateChange& b) { a.Swap(&b); }
  inline void Swap(StateChange* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateChange* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StateChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateChange& from) { StateChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StateChange* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MoveMsg.StateChange"; }

 protected:
  explicit StateChange(::google::protobuf::Arena* arena);
  StateChange(::google::protobuf::Arena* arena, const StateChange& from);
  StateChange(::google::protobuf::Arena* arena, StateChange&& from) noexcept
      : StateChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateinfoFieldNumber = 1,
  };
  // optional int32 stateinfo = 1;
  bool has_stateinfo() const;
  void clear_stateinfo() ;
  ::int32_t stateinfo() const;
  void set_stateinfo(::int32_t value);

  private:
  ::int32_t _internal_stateinfo() const;
  void _internal_set_stateinfo(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MoveMsg.StateChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateChange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t stateinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Move_2eproto;
};
// -------------------------------------------------------------------

class MoveSync final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MoveMsg.MoveSync) */ {
 public:
  inline MoveSync() : MoveSync(nullptr) {}
  ~MoveSync() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MoveSync* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MoveSync));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MoveSync(
      ::google::protobuf::internal::ConstantInitialized);

  inline MoveSync(const MoveSync& from) : MoveSync(nullptr, from) {}
  inline MoveSync(MoveSync&& from) noexcept
      : MoveSync(nullptr, std::move(from)) {}
  inline MoveSync& operator=(const MoveSync& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveSync& operator=(MoveSync&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveSync& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveSync* internal_default_instance() {
    return reinterpret_cast<const MoveSync*>(
        &_MoveSync_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MoveSync& a, MoveSync& b) { a.Swap(&b); }
  inline void Swap(MoveSync* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveSync* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveSync* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MoveSync>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveSync& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MoveSync& from) { MoveSync::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MoveSync* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MoveMsg.MoveSync"; }

 protected:
  explicit MoveSync(::google::protobuf::Arena* arena);
  MoveSync(::google::protobuf::Arena* arena, const MoveSync& from);
  MoveSync(::google::protobuf::Arena* arena, MoveSync&& from) noexcept
      : MoveSync(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
  };
  // repeated float position = 1;
  int position_size() const;
  private:
  int _internal_position_size() const;

  public:
  void clear_position() ;
  float position(int index) const;
  void set_position(int index, float value);
  void add_position(float value);
  const ::google::protobuf::RepeatedField<float>& position() const;
  ::google::protobuf::RepeatedField<float>* mutable_position();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_position() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:MoveMsg.MoveSync)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MoveSync& from_msg);
    ::google::protobuf::RepeatedField<float> position_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Move_2eproto;
};
// -------------------------------------------------------------------

class Move final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MoveMsg.Move) */ {
 public:
  inline Move() : Move(nullptr) {}
  ~Move() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Move* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Move));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Move(
      ::google::protobuf::internal::ConstantInitialized);

  inline Move(const Move& from) : Move(nullptr, from) {}
  inline Move(Move&& from) noexcept
      : Move(nullptr, std::move(from)) {}
  inline Move& operator=(const Move& from) {
    CopyFrom(from);
    return *this;
  }
  inline Move& operator=(Move&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Move& default_instance() {
    return *internal_default_instance();
  }
  static inline const Move* internal_default_instance() {
    return reinterpret_cast<const Move*>(
        &_Move_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Move& a, Move& b) { a.Swap(&b); }
  inline void Swap(Move* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Move* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Move* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Move>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Move& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Move& from) { Move::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Move* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MoveMsg.Move"; }

 protected:
  explicit Move(::google::protobuf::Arena* arena);
  Move(::google::protobuf::Arena* arena, const Move& from);
  Move(::google::protobuf::Arena* arena, Move&& from) noexcept
      : Move(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDirectionFieldNumber = 1,
    kSpeedFieldNumber = 2,
  };
  // repeated float direction = 1;
  int direction_size() const;
  private:
  int _internal_direction_size() const;

  public:
  void clear_direction() ;
  float direction(int index) const;
  void set_direction(int index, float value);
  void add_direction(float value);
  const ::google::protobuf::RepeatedField<float>& direction() const;
  ::google::protobuf::RepeatedField<float>* mutable_direction();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_direction() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_direction();

  public:
  // optional float speed = 2;
  bool has_speed() const;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // @@protoc_insertion_point(class_scope:MoveMsg.Move)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Move& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> direction_;
    float speed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Move_2eproto;
};
// -------------------------------------------------------------------

class Jump final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MoveMsg.Jump) */ {
 public:
  inline Jump() : Jump(nullptr) {}
  ~Jump() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Jump* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Jump));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Jump(
      ::google::protobuf::internal::ConstantInitialized);

  inline Jump(const Jump& from) : Jump(nullptr, from) {}
  inline Jump(Jump&& from) noexcept
      : Jump(nullptr, std::move(from)) {}
  inline Jump& operator=(const Jump& from) {
    CopyFrom(from);
    return *this;
  }
  inline Jump& operator=(Jump&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Jump& default_instance() {
    return *internal_default_instance();
  }
  static inline const Jump* internal_default_instance() {
    return reinterpret_cast<const Jump*>(
        &_Jump_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Jump& a, Jump& b) { a.Swap(&b); }
  inline void Swap(Jump* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Jump* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Jump* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Jump>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Jump& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Jump& from) { Jump::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Jump* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MoveMsg.Jump"; }

 protected:
  explicit Jump(::google::protobuf::Arena* arena);
  Jump(::google::protobuf::Arena* arena, const Jump& from);
  Jump(::google::protobuf::Arena* arena, Jump&& from) noexcept
      : Jump(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPowerFieldNumber = 1,
  };
  // optional float power = 1;
  bool has_power() const;
  void clear_power() ;
  float power() const;
  void set_power(float value);

  private:
  float _internal_power() const;
  void _internal_set_power(float value);

  public:
  // @@protoc_insertion_point(class_scope:MoveMsg.Jump)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Jump& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float power_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Move_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Move

// repeated float direction = 1;
inline int Move::_internal_direction_size() const {
  return _internal_direction().size();
}
inline int Move::direction_size() const {
  return _internal_direction_size();
}
inline void Move::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.Clear();
}
inline float Move::direction(int index) const {
  // @@protoc_insertion_point(field_get:MoveMsg.Move.direction)
  return _internal_direction().Get(index);
}
inline void Move::set_direction(int index, float value) {
  _internal_mutable_direction()->Set(index, value);
  // @@protoc_insertion_point(field_set:MoveMsg.Move.direction)
}
inline void Move::add_direction(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_direction()->Add(value);
  // @@protoc_insertion_point(field_add:MoveMsg.Move.direction)
}
inline const ::google::protobuf::RepeatedField<float>& Move::direction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MoveMsg.Move.direction)
  return _internal_direction();
}
inline ::google::protobuf::RepeatedField<float>* Move::mutable_direction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MoveMsg.Move.direction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_direction();
}
inline const ::google::protobuf::RepeatedField<float>&
Move::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_;
}
inline ::google::protobuf::RepeatedField<float>* Move::_internal_mutable_direction() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.direction_;
}

// optional float speed = 2;
inline bool Move::has_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Move::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Move::speed() const {
  // @@protoc_insertion_point(field_get:MoveMsg.Move.speed)
  return _internal_speed();
}
inline void Move::set_speed(float value) {
  _internal_set_speed(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:MoveMsg.Move.speed)
}
inline float Move::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void Move::_internal_set_speed(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// -------------------------------------------------------------------

// Jump

// optional float power = 1;
inline bool Jump::has_power() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Jump::clear_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Jump::power() const {
  // @@protoc_insertion_point(field_get:MoveMsg.Jump.power)
  return _internal_power();
}
inline void Jump::set_power(float value) {
  _internal_set_power(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:MoveMsg.Jump.power)
}
inline float Jump::_internal_power() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.power_;
}
inline void Jump::_internal_set_power(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_ = value;
}

// -------------------------------------------------------------------

// StateChange

// optional int32 stateinfo = 1;
inline bool StateChange::has_stateinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StateChange::clear_stateinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stateinfo_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t StateChange::stateinfo() const {
  // @@protoc_insertion_point(field_get:MoveMsg.StateChange.stateinfo)
  return _internal_stateinfo();
}
inline void StateChange::set_stateinfo(::int32_t value) {
  _internal_set_stateinfo(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:MoveMsg.StateChange.stateinfo)
}
inline ::int32_t StateChange::_internal_stateinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stateinfo_;
}
inline void StateChange::_internal_set_stateinfo(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stateinfo_ = value;
}

// -------------------------------------------------------------------

// MoveSync

// repeated float position = 1;
inline int MoveSync::_internal_position_size() const {
  return _internal_position().size();
}
inline int MoveSync::position_size() const {
  return _internal_position_size();
}
inline void MoveSync::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_.Clear();
}
inline float MoveSync::position(int index) const {
  // @@protoc_insertion_point(field_get:MoveMsg.MoveSync.position)
  return _internal_position().Get(index);
}
inline void MoveSync::set_position(int index, float value) {
  _internal_mutable_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:MoveMsg.MoveSync.position)
}
inline void MoveSync::add_position(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_position()->Add(value);
  // @@protoc_insertion_point(field_add:MoveMsg.MoveSync.position)
}
inline const ::google::protobuf::RepeatedField<float>& MoveSync::position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MoveMsg.MoveSync.position)
  return _internal_position();
}
inline ::google::protobuf::RepeatedField<float>* MoveSync::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MoveMsg.MoveSync.position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_position();
}
inline const ::google::protobuf::RepeatedField<float>&
MoveSync::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline ::google::protobuf::RepeatedField<float>* MoveSync::_internal_mutable_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.position_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace MoveMsg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Move_2eproto_2epb_2eh
