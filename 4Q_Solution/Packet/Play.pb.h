// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Play.proto
// Protobuf C++ Version: 5.29.2

#ifndef Play_2eproto_2epb_2eh
#define Play_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Play_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Play_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Play_2eproto;
namespace PlayMsg {
class DialogProgress;
struct DialogProgressDefaultTypeInternal;
extern DialogProgressDefaultTypeInternal _DialogProgress_default_instance_;
class InteractDialog;
struct InteractDialogDefaultTypeInternal;
extern InteractDialogDefaultTypeInternal _InteractDialog_default_instance_;
class SelectPart;
struct SelectPartDefaultTypeInternal;
extern SelectPartDefaultTypeInternal _SelectPart_default_instance_;
}  // namespace PlayMsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace PlayMsg {

// ===================================================================


// -------------------------------------------------------------------

class SelectPart final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayMsg.SelectPart) */ {
 public:
  inline SelectPart() : SelectPart(nullptr) {}
  ~SelectPart() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SelectPart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SelectPart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SelectPart(
      ::google::protobuf::internal::ConstantInitialized);

  inline SelectPart(const SelectPart& from) : SelectPart(nullptr, from) {}
  inline SelectPart(SelectPart&& from) noexcept
      : SelectPart(nullptr, std::move(from)) {}
  inline SelectPart& operator=(const SelectPart& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectPart& operator=(SelectPart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SelectPart& default_instance() {
    return *internal_default_instance();
  }
  static inline const SelectPart* internal_default_instance() {
    return reinterpret_cast<const SelectPart*>(
        &_SelectPart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SelectPart& a, SelectPart& b) { a.Swap(&b); }
  inline void Swap(SelectPart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SelectPart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SelectPart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SelectPart>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SelectPart& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SelectPart& from) { SelectPart::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SelectPart* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayMsg.SelectPart"; }

 protected:
  explicit SelectPart(::google::protobuf::Arena* arena);
  SelectPart(::google::protobuf::Arena* arena, const SelectPart& from);
  SelectPart(::google::protobuf::Arena* arena, SelectPart&& from) noexcept
      : SelectPart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSerialnumberFieldNumber = 1,
    kSelectpartFieldNumber = 2,
  };
  // optional int32 serialnumber = 1;
  bool has_serialnumber() const;
  void clear_serialnumber() ;
  ::int32_t serialnumber() const;
  void set_serialnumber(::int32_t value);

  private:
  ::int32_t _internal_serialnumber() const;
  void _internal_set_serialnumber(::int32_t value);

  public:
  // optional int32 selectpart = 2;
  bool has_selectpart() const;
  void clear_selectpart() ;
  ::int32_t selectpart() const;
  void set_selectpart(::int32_t value);

  private:
  ::int32_t _internal_selectpart() const;
  void _internal_set_selectpart(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayMsg.SelectPart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SelectPart& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t serialnumber_;
    ::int32_t selectpart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Play_2eproto;
};
// -------------------------------------------------------------------

class InteractDialog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayMsg.InteractDialog) */ {
 public:
  inline InteractDialog() : InteractDialog(nullptr) {}
  ~InteractDialog() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InteractDialog* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InteractDialog));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InteractDialog(
      ::google::protobuf::internal::ConstantInitialized);

  inline InteractDialog(const InteractDialog& from) : InteractDialog(nullptr, from) {}
  inline InteractDialog(InteractDialog&& from) noexcept
      : InteractDialog(nullptr, std::move(from)) {}
  inline InteractDialog& operator=(const InteractDialog& from) {
    CopyFrom(from);
    return *this;
  }
  inline InteractDialog& operator=(InteractDialog&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InteractDialog& default_instance() {
    return *internal_default_instance();
  }
  static inline const InteractDialog* internal_default_instance() {
    return reinterpret_cast<const InteractDialog*>(
        &_InteractDialog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(InteractDialog& a, InteractDialog& b) { a.Swap(&b); }
  inline void Swap(InteractDialog* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InteractDialog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InteractDialog* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InteractDialog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InteractDialog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InteractDialog& from) { InteractDialog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InteractDialog* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayMsg.InteractDialog"; }

 protected:
  explicit InteractDialog(::google::protobuf::Arena* arena);
  InteractDialog(::google::protobuf::Arena* arena, const InteractDialog& from);
  InteractDialog(::google::protobuf::Arena* arena, InteractDialog&& from) noexcept
      : InteractDialog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDialogidFieldNumber = 1,
    kButtonidFieldNumber = 2,
  };
  // optional int32 dialogid = 1;
  bool has_dialogid() const;
  void clear_dialogid() ;
  ::int32_t dialogid() const;
  void set_dialogid(::int32_t value);

  private:
  ::int32_t _internal_dialogid() const;
  void _internal_set_dialogid(::int32_t value);

  public:
  // optional int32 buttonid = 2;
  bool has_buttonid() const;
  void clear_buttonid() ;
  ::int32_t buttonid() const;
  void set_buttonid(::int32_t value);

  private:
  ::int32_t _internal_buttonid() const;
  void _internal_set_buttonid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayMsg.InteractDialog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InteractDialog& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t dialogid_;
    ::int32_t buttonid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Play_2eproto;
};
// -------------------------------------------------------------------

class DialogProgress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayMsg.DialogProgress) */ {
 public:
  inline DialogProgress() : DialogProgress(nullptr) {}
  ~DialogProgress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DialogProgress* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DialogProgress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DialogProgress(
      ::google::protobuf::internal::ConstantInitialized);

  inline DialogProgress(const DialogProgress& from) : DialogProgress(nullptr, from) {}
  inline DialogProgress(DialogProgress&& from) noexcept
      : DialogProgress(nullptr, std::move(from)) {}
  inline DialogProgress& operator=(const DialogProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline DialogProgress& operator=(DialogProgress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DialogProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const DialogProgress* internal_default_instance() {
    return reinterpret_cast<const DialogProgress*>(
        &_DialogProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DialogProgress& a, DialogProgress& b) { a.Swap(&b); }
  inline void Swap(DialogProgress* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DialogProgress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DialogProgress* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DialogProgress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DialogProgress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DialogProgress& from) { DialogProgress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DialogProgress* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayMsg.DialogProgress"; }

 protected:
  explicit DialogProgress(::google::protobuf::Arena* arena);
  DialogProgress(::google::protobuf::Arena* arena, const DialogProgress& from);
  DialogProgress(::google::protobuf::Arena* arena, DialogProgress&& from) noexcept
      : DialogProgress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNextdialogidFieldNumber = 1,
  };
  // optional int32 nextdialogid = 1;
  bool has_nextdialogid() const;
  void clear_nextdialogid() ;
  ::int32_t nextdialogid() const;
  void set_nextdialogid(::int32_t value);

  private:
  ::int32_t _internal_nextdialogid() const;
  void _internal_set_nextdialogid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayMsg.DialogProgress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DialogProgress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t nextdialogid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Play_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SelectPart

// optional int32 serialnumber = 1;
inline bool SelectPart::has_serialnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SelectPart::clear_serialnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SelectPart::serialnumber() const {
  // @@protoc_insertion_point(field_get:PlayMsg.SelectPart.serialnumber)
  return _internal_serialnumber();
}
inline void SelectPart::set_serialnumber(::int32_t value) {
  _internal_set_serialnumber(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:PlayMsg.SelectPart.serialnumber)
}
inline ::int32_t SelectPart::_internal_serialnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serialnumber_;
}
inline void SelectPart::_internal_set_serialnumber(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_ = value;
}

// optional int32 selectpart = 2;
inline bool SelectPart::has_selectpart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SelectPart::clear_selectpart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectpart_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SelectPart::selectpart() const {
  // @@protoc_insertion_point(field_get:PlayMsg.SelectPart.selectpart)
  return _internal_selectpart();
}
inline void SelectPart::set_selectpart(::int32_t value) {
  _internal_set_selectpart(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:PlayMsg.SelectPart.selectpart)
}
inline ::int32_t SelectPart::_internal_selectpart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selectpart_;
}
inline void SelectPart::_internal_set_selectpart(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectpart_ = value;
}

// -------------------------------------------------------------------

// InteractDialog

// optional int32 dialogid = 1;
inline bool InteractDialog::has_dialogid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InteractDialog::clear_dialogid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialogid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t InteractDialog::dialogid() const {
  // @@protoc_insertion_point(field_get:PlayMsg.InteractDialog.dialogid)
  return _internal_dialogid();
}
inline void InteractDialog::set_dialogid(::int32_t value) {
  _internal_set_dialogid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:PlayMsg.InteractDialog.dialogid)
}
inline ::int32_t InteractDialog::_internal_dialogid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dialogid_;
}
inline void InteractDialog::_internal_set_dialogid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dialogid_ = value;
}

// optional int32 buttonid = 2;
inline bool InteractDialog::has_buttonid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void InteractDialog::clear_buttonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buttonid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t InteractDialog::buttonid() const {
  // @@protoc_insertion_point(field_get:PlayMsg.InteractDialog.buttonid)
  return _internal_buttonid();
}
inline void InteractDialog::set_buttonid(::int32_t value) {
  _internal_set_buttonid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:PlayMsg.InteractDialog.buttonid)
}
inline ::int32_t InteractDialog::_internal_buttonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buttonid_;
}
inline void InteractDialog::_internal_set_buttonid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buttonid_ = value;
}

// -------------------------------------------------------------------

// DialogProgress

// optional int32 nextdialogid = 1;
inline bool DialogProgress::has_nextdialogid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DialogProgress::clear_nextdialogid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nextdialogid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t DialogProgress::nextdialogid() const {
  // @@protoc_insertion_point(field_get:PlayMsg.DialogProgress.nextdialogid)
  return _internal_nextdialogid();
}
inline void DialogProgress::set_nextdialogid(::int32_t value) {
  _internal_set_nextdialogid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:PlayMsg.DialogProgress.nextdialogid)
}
inline ::int32_t DialogProgress::_internal_nextdialogid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nextdialogid_;
}
inline void DialogProgress::_internal_set_nextdialogid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nextdialogid_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace PlayMsg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Play_2eproto_2epb_2eh
