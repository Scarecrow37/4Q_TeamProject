// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Play.proto
// Protobuf C++ Version: 5.29.2

#include "Play.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace PlayMsg {

inline constexpr SelectPart::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selectpart_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectPart::SelectPart(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectPartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectPartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectPartDefaultTypeInternal() {}
  union {
    SelectPart _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectPartDefaultTypeInternal _SelectPart_default_instance_;

inline constexpr PutObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        targetserialnumber_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PutObject::PutObject(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PutObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutObjectDefaultTypeInternal() {}
  union {
    PutObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutObjectDefaultTypeInternal _PutObject_default_instance_;

inline constexpr PickObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        targetserialnumber_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PickObject::PickObject(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PickObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PickObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PickObjectDefaultTypeInternal() {}
  union {
    PickObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PickObjectDefaultTypeInternal _PickObject_default_instance_;

inline constexpr InteractDialog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dialogid_{0},
        buttonid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InteractDialog::InteractDialog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InteractDialogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InteractDialogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InteractDialogDefaultTypeInternal() {}
  union {
    InteractDialog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InteractDialogDefaultTypeInternal _InteractDialog_default_instance_;

inline constexpr DialogProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nextdialogid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DialogProgress::DialogProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DialogProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DialogProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DialogProgressDefaultTypeInternal() {}
  union {
    DialogProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DialogProgressDefaultTypeInternal _DialogProgress_default_instance_;
}  // namespace PlayMsg
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Play_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Play_2eproto = nullptr;
const ::uint32_t
    TableStruct_Play_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::PlayMsg::SelectPart, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::SelectPart, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayMsg::SelectPart, _impl_.selectpart_),
        0,
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PickObject, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PickObject, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PickObject, _impl_.targetserialnumber_),
        0,
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PutObject, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PutObject, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayMsg::PutObject, _impl_.targetserialnumber_),
        0,
        PROTOBUF_FIELD_OFFSET(::PlayMsg::InteractDialog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::InteractDialog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayMsg::InteractDialog, _impl_.dialogid_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::InteractDialog, _impl_.buttonid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::PlayMsg::DialogProgress, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayMsg::DialogProgress, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayMsg::DialogProgress, _impl_.nextdialogid_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::PlayMsg::SelectPart)},
        {10, 19, -1, sizeof(::PlayMsg::PickObject)},
        {20, 29, -1, sizeof(::PlayMsg::PutObject)},
        {30, 40, -1, sizeof(::PlayMsg::InteractDialog)},
        {42, 51, -1, sizeof(::PlayMsg::DialogProgress)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::PlayMsg::_SelectPart_default_instance_._instance,
    &::PlayMsg::_PickObject_default_instance_._instance,
    &::PlayMsg::_PutObject_default_instance_._instance,
    &::PlayMsg::_InteractDialog_default_instance_._instance,
    &::PlayMsg::_DialogProgress_default_instance_._instance,
};
const char descriptor_table_protodef_Play_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nPlay.proto\022\007PlayMsg\"4\n\nSelectPart\022\027\n\ns"
    "electpart\030\001 \001(\005H\000\210\001\001B\r\n\013_selectpart\"D\n\nP"
    "ickObject\022\037\n\022targetserialnumber\030\001 \001(\005H\000\210"
    "\001\001B\025\n\023_targetserialnumber\"C\n\tPutObject\022\037"
    "\n\022targetserialnumber\030\001 \001(\005H\000\210\001\001B\025\n\023_targ"
    "etserialnumber\"X\n\016InteractDialog\022\025\n\010dial"
    "ogid\030\001 \001(\005H\000\210\001\001\022\025\n\010buttonid\030\002 \001(\005H\001\210\001\001B\013"
    "\n\t_dialogidB\013\n\t_buttonid\"<\n\016DialogProgre"
    "ss\022\031\n\014nextdialogid\030\001 \001(\005H\000\210\001\001B\017\n\r_nextdi"
    "alogidb\006proto3"
};
static ::absl::once_flag descriptor_table_Play_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Play_2eproto = {
    false,
    false,
    374,
    descriptor_table_protodef_Play_2eproto,
    "Play.proto",
    &descriptor_table_Play_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_Play_2eproto::offsets,
    file_level_enum_descriptors_Play_2eproto,
    file_level_service_descriptors_Play_2eproto,
};
namespace PlayMsg {
// ===================================================================

class SelectPart::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SelectPart>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectPart, _impl_._has_bits_);
};

SelectPart::SelectPart(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayMsg.SelectPart)
}
SelectPart::SelectPart(
    ::google::protobuf::Arena* arena, const SelectPart& from)
    : SelectPart(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SelectPart::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SelectPart::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.selectpart_ = {};
}
SelectPart::~SelectPart() {
  // @@protoc_insertion_point(destructor:PlayMsg.SelectPart)
  SharedDtor(*this);
}
inline void SelectPart::SharedDtor(MessageLite& self) {
  SelectPart& this_ = static_cast<SelectPart&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SelectPart::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SelectPart(arena);
}
constexpr auto SelectPart::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SelectPart),
                                            alignof(SelectPart));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SelectPart::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SelectPart_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SelectPart::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SelectPart>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SelectPart::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SelectPart>(), &SelectPart::ByteSizeLong,
            &SelectPart::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SelectPart, _impl_._cached_size_),
        false,
    },
    &SelectPart::kDescriptorMethods,
    &descriptor_table_Play_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SelectPart::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SelectPart::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectPart, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayMsg::SelectPart>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 selectpart = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectPart, _impl_.selectpart_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SelectPart, _impl_.selectpart_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 selectpart = 1;
    {PROTOBUF_FIELD_OFFSET(SelectPart, _impl_.selectpart_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SelectPart::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayMsg.SelectPart)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.selectpart_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SelectPart::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SelectPart& this_ = static_cast<const SelectPart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SelectPart::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SelectPart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayMsg.SelectPart)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 selectpart = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_selectpart(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayMsg.SelectPart)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SelectPart::ByteSizeLong(const MessageLite& base) {
          const SelectPart& this_ = static_cast<const SelectPart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SelectPart::ByteSizeLong() const {
          const SelectPart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayMsg.SelectPart)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 selectpart = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_selectpart());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SelectPart::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectPart*>(&to_msg);
  auto& from = static_cast<const SelectPart&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayMsg.SelectPart)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.selectpart_ = from._impl_.selectpart_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectPart::CopyFrom(const SelectPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayMsg.SelectPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectPart::InternalSwap(SelectPart* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.selectpart_, other->_impl_.selectpart_);
}

::google::protobuf::Metadata SelectPart::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PickObject::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PickObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PickObject, _impl_._has_bits_);
};

PickObject::PickObject(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayMsg.PickObject)
}
PickObject::PickObject(
    ::google::protobuf::Arena* arena, const PickObject& from)
    : PickObject(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PickObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PickObject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.targetserialnumber_ = {};
}
PickObject::~PickObject() {
  // @@protoc_insertion_point(destructor:PlayMsg.PickObject)
  SharedDtor(*this);
}
inline void PickObject::SharedDtor(MessageLite& self) {
  PickObject& this_ = static_cast<PickObject&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PickObject::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PickObject(arena);
}
constexpr auto PickObject::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PickObject),
                                            alignof(PickObject));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PickObject::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PickObject_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PickObject::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PickObject>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PickObject::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PickObject>(), &PickObject::ByteSizeLong,
            &PickObject::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PickObject, _impl_._cached_size_),
        false,
    },
    &PickObject::kDescriptorMethods,
    &descriptor_table_Play_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PickObject::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PickObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PickObject, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayMsg::PickObject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 targetserialnumber = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PickObject, _impl_.targetserialnumber_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PickObject, _impl_.targetserialnumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 targetserialnumber = 1;
    {PROTOBUF_FIELD_OFFSET(PickObject, _impl_.targetserialnumber_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PickObject::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayMsg.PickObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetserialnumber_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PickObject::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PickObject& this_ = static_cast<const PickObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PickObject::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PickObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayMsg.PickObject)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 targetserialnumber = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_targetserialnumber(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayMsg.PickObject)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PickObject::ByteSizeLong(const MessageLite& base) {
          const PickObject& this_ = static_cast<const PickObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PickObject::ByteSizeLong() const {
          const PickObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayMsg.PickObject)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 targetserialnumber = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetserialnumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PickObject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PickObject*>(&to_msg);
  auto& from = static_cast<const PickObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayMsg.PickObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.targetserialnumber_ = from._impl_.targetserialnumber_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PickObject::CopyFrom(const PickObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayMsg.PickObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PickObject::InternalSwap(PickObject* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.targetserialnumber_, other->_impl_.targetserialnumber_);
}

::google::protobuf::Metadata PickObject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PutObject::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PutObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PutObject, _impl_._has_bits_);
};

PutObject::PutObject(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayMsg.PutObject)
}
PutObject::PutObject(
    ::google::protobuf::Arena* arena, const PutObject& from)
    : PutObject(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PutObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PutObject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.targetserialnumber_ = {};
}
PutObject::~PutObject() {
  // @@protoc_insertion_point(destructor:PlayMsg.PutObject)
  SharedDtor(*this);
}
inline void PutObject::SharedDtor(MessageLite& self) {
  PutObject& this_ = static_cast<PutObject&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PutObject::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PutObject(arena);
}
constexpr auto PutObject::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PutObject),
                                            alignof(PutObject));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PutObject::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PutObject_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PutObject::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PutObject>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PutObject::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PutObject>(), &PutObject::ByteSizeLong,
            &PutObject::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PutObject, _impl_._cached_size_),
        false,
    },
    &PutObject::kDescriptorMethods,
    &descriptor_table_Play_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PutObject::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PutObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PutObject, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayMsg::PutObject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 targetserialnumber = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PutObject, _impl_.targetserialnumber_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PutObject, _impl_.targetserialnumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 targetserialnumber = 1;
    {PROTOBUF_FIELD_OFFSET(PutObject, _impl_.targetserialnumber_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PutObject::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayMsg.PutObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetserialnumber_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PutObject::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PutObject& this_ = static_cast<const PutObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PutObject::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PutObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayMsg.PutObject)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 targetserialnumber = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_targetserialnumber(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayMsg.PutObject)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PutObject::ByteSizeLong(const MessageLite& base) {
          const PutObject& this_ = static_cast<const PutObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PutObject::ByteSizeLong() const {
          const PutObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayMsg.PutObject)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 targetserialnumber = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetserialnumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PutObject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PutObject*>(&to_msg);
  auto& from = static_cast<const PutObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayMsg.PutObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.targetserialnumber_ = from._impl_.targetserialnumber_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PutObject::CopyFrom(const PutObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayMsg.PutObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PutObject::InternalSwap(PutObject* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.targetserialnumber_, other->_impl_.targetserialnumber_);
}

::google::protobuf::Metadata PutObject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InteractDialog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InteractDialog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_._has_bits_);
};

InteractDialog::InteractDialog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayMsg.InteractDialog)
}
InteractDialog::InteractDialog(
    ::google::protobuf::Arena* arena, const InteractDialog& from)
    : InteractDialog(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE InteractDialog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InteractDialog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dialogid_),
           0,
           offsetof(Impl_, buttonid_) -
               offsetof(Impl_, dialogid_) +
               sizeof(Impl_::buttonid_));
}
InteractDialog::~InteractDialog() {
  // @@protoc_insertion_point(destructor:PlayMsg.InteractDialog)
  SharedDtor(*this);
}
inline void InteractDialog::SharedDtor(MessageLite& self) {
  InteractDialog& this_ = static_cast<InteractDialog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* InteractDialog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InteractDialog(arena);
}
constexpr auto InteractDialog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(InteractDialog),
                                            alignof(InteractDialog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InteractDialog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InteractDialog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InteractDialog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InteractDialog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InteractDialog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InteractDialog>(), &InteractDialog::ByteSizeLong,
            &InteractDialog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_._cached_size_),
        false,
    },
    &InteractDialog::kDescriptorMethods,
    &descriptor_table_Play_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InteractDialog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> InteractDialog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayMsg::InteractDialog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 buttonid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InteractDialog, _impl_.buttonid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.buttonid_)}},
    // optional int32 dialogid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InteractDialog, _impl_.dialogid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.dialogid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 dialogid = 1;
    {PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.dialogid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 buttonid = 2;
    {PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.buttonid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InteractDialog::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayMsg.InteractDialog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.dialogid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.buttonid_) -
        reinterpret_cast<char*>(&_impl_.dialogid_)) + sizeof(_impl_.buttonid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InteractDialog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InteractDialog& this_ = static_cast<const InteractDialog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InteractDialog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InteractDialog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayMsg.InteractDialog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 dialogid = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_dialogid(), target);
          }

          // optional int32 buttonid = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_buttonid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayMsg.InteractDialog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InteractDialog::ByteSizeLong(const MessageLite& base) {
          const InteractDialog& this_ = static_cast<const InteractDialog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InteractDialog::ByteSizeLong() const {
          const InteractDialog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayMsg.InteractDialog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional int32 dialogid = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_dialogid());
            }
            // optional int32 buttonid = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_buttonid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InteractDialog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InteractDialog*>(&to_msg);
  auto& from = static_cast<const InteractDialog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayMsg.InteractDialog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.dialogid_ = from._impl_.dialogid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.buttonid_ = from._impl_.buttonid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InteractDialog::CopyFrom(const InteractDialog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayMsg.InteractDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InteractDialog::InternalSwap(InteractDialog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.buttonid_)
      + sizeof(InteractDialog::_impl_.buttonid_)
      - PROTOBUF_FIELD_OFFSET(InteractDialog, _impl_.dialogid_)>(
          reinterpret_cast<char*>(&_impl_.dialogid_),
          reinterpret_cast<char*>(&other->_impl_.dialogid_));
}

::google::protobuf::Metadata InteractDialog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DialogProgress::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DialogProgress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DialogProgress, _impl_._has_bits_);
};

DialogProgress::DialogProgress(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayMsg.DialogProgress)
}
DialogProgress::DialogProgress(
    ::google::protobuf::Arena* arena, const DialogProgress& from)
    : DialogProgress(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DialogProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DialogProgress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nextdialogid_ = {};
}
DialogProgress::~DialogProgress() {
  // @@protoc_insertion_point(destructor:PlayMsg.DialogProgress)
  SharedDtor(*this);
}
inline void DialogProgress::SharedDtor(MessageLite& self) {
  DialogProgress& this_ = static_cast<DialogProgress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DialogProgress::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DialogProgress(arena);
}
constexpr auto DialogProgress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DialogProgress),
                                            alignof(DialogProgress));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DialogProgress::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DialogProgress_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DialogProgress::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DialogProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DialogProgress::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DialogProgress>(), &DialogProgress::ByteSizeLong,
            &DialogProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DialogProgress, _impl_._cached_size_),
        false,
    },
    &DialogProgress::kDescriptorMethods,
    &descriptor_table_Play_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DialogProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DialogProgress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DialogProgress, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayMsg::DialogProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 nextdialogid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DialogProgress, _impl_.nextdialogid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(DialogProgress, _impl_.nextdialogid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 nextdialogid = 1;
    {PROTOBUF_FIELD_OFFSET(DialogProgress, _impl_.nextdialogid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DialogProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayMsg.DialogProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nextdialogid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DialogProgress::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DialogProgress& this_ = static_cast<const DialogProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DialogProgress::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DialogProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayMsg.DialogProgress)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 nextdialogid = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_nextdialogid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayMsg.DialogProgress)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DialogProgress::ByteSizeLong(const MessageLite& base) {
          const DialogProgress& this_ = static_cast<const DialogProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DialogProgress::ByteSizeLong() const {
          const DialogProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayMsg.DialogProgress)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 nextdialogid = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_nextdialogid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DialogProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DialogProgress*>(&to_msg);
  auto& from = static_cast<const DialogProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayMsg.DialogProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.nextdialogid_ = from._impl_.nextdialogid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DialogProgress::CopyFrom(const DialogProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayMsg.DialogProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DialogProgress::InternalSwap(DialogProgress* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.nextdialogid_, other->_impl_.nextdialogid_);
}

::google::protobuf::Metadata DialogProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace PlayMsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Play_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
